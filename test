% http://www.nongnu.org/bnf/

% operators
equiv       ::= ==;
neq         ::= <>;
le          ::= <;
gt          ::= >;
lte         ::= <=;
gte         ::= >=;
add         ::= +;
subt        ::= -;
mult        ::= *;
bslash      ::= /;
eq          ::= =;
or          ::= |;
and         ::= &;
not         ::= !;
opt         ::= ?;

% punctuations
openpar     ::= (;
closepar    ::= );
opencubr    ::= {;
closecubr   ::= };
opensqbr    ::= [;
closesqbr   ::= ];
semi        ::= ;;
comma       ::= ,;
dot         ::= .;
colon       ::= :;
assign      ::= ::;

% reserved words
if          ::= if;
then        ::= then;
else        ::= else;
integer     ::= integer;
float       ::= float;
string      ::= string;
void        ::= void;
public      ::= public;
private     ::= private;
func        ::= func;
var         ::= var;
class       ::= class;
while       ::= while;
read        ::= read;
write       ::= write;
return      ::= return;
main        ::= main;
inherits    ::= inherits;
break       ::= break;
continue    ::= continue;

% assignments (no token recognition)
nonzero     =   0|1|2|3|4|5|6|7|8|9;
upper       =   A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z;
lower       =   a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z;
letter      =   {upper}|{lower};
digit       =   0|{nonzero};
alphanum    =   {letter}|{digit}|_;
character   =   {alphanum}|\ ;
fraction    =   \..(0|({digit}*.{nonzero}));

% tokens
id          ::= {letter}.{alphanum}*;
intnum      ::= {nonzero}.{digit}*|0;
floatnum    ::= {integer}.{fraction}.(e.(+|-)?.{integer})?;
stringlit   ::= \".{character}*.\";
% blockcmt    ::= /\*.*?\*/|/\*/;
% inlinecmt   ::= //.*?\n;
